@model MHClub.Models.Ads.AdsCreateViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Новое объявление";
}

@using (Html.BeginForm("Create", "Ads", FormMethod.Post, new
        {
            id = "formData",
            enctype = "multipart/form-data"
        }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="d-flex justify-content-center">
        <div class="d-flex flex-column w-75 gap-2">
            <div class="d-inline-flex w-auto gap-2 align-items-center mb-1">
                <i class="bi-chevron-left" onclick="location.href='@ViewBag.ReturnUrl';"></i>
                <h4>
                    <span class="align-middle">
                        @ViewData["Title"]
                    </span>
                </h4>
            </div>
            
            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.Name, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextBoxFor(m => m.Name, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите название объявления",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.ConditionId, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.DropDownListFor(m => m.ConditionId, (List<SelectListItem>)ViewBag.Conditions, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите состояние"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.ConditionId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.ManufactureCountry, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.DropDownListFor(m => m.ManufactureCountry, Model.CountriesSelect, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите страну-производитель",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.ManufactureCountry, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.Quantity, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @{
                            var quantitySelectList = new List<SelectListItem>();
                            for (var i = 0; i < 20; i++)
                            {
                                quantitySelectList.Add(new SelectListItem($"{i} шт.", $"{i}"));
                            }
                        }
                        @Html.DropDownListFor(m => m.Quantity, quantitySelectList, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите количество",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.Description, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextAreaFor(m => m.Description, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите описание",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1">
                @Html.LabelFor(m => m.Images, new { @class = "col-md-2 form-label w-100" })
                <div class="images control-group col-md-10 w-100">
                    <div class="mb-1 d-flex justify-content-between w-100">
                        <button type="button" class="btn layout-button w-100 m-1" id="addImageButton">Добавить</button>
                        <button type="button" class="btn layout-button w-100 m-1" id="removeImageButton">Убрать</button>
                    </div>
                </div>
            </div>

            <h4>Информация о доставке</h4>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.StartCountry, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.DropDownListFor(m => m.StartCountry, Model.CountriesSelect, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите страну отправления",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.StartCountry, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.CountryOfIntermediateArrival, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.DropDownListFor(m => m.CountryOfIntermediateArrival, Model.CountriesSelect, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите страну промежуточного пребывания",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.CountryOfIntermediateArrival, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.CountryOfDelivery, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.DropDownListFor(m => m.CountryOfDelivery, Model.CountriesSelect, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите страну доставки",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.CountryOfDelivery, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.PlannedDeliveryDays, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextBoxFor(m => m.PlannedDeliveryDays, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите страну доставки",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.PlannedDeliveryDays, "", new { @class = "text-danger" })
                </div>
            </div>

            <h4>Калькулятор полной стоимости</h4>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.Cost, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextBoxFor(m => m.Cost, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите стоимость товара в рублях",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.Label("", "Габариты с учетом упаковки в см", new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.LabelFor(m => m.Height, new
                        {
                            @class = "col-md-2 w-auto control-label"
                        })
                        @Html.TextBoxFor(m => m.Height, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите высоту",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger" })
                    <div class="input-container">
                        @Html.LabelFor(m => m.Width, new
                        {
                        @class = "col-md-2 w-auto control-label"
                        })
                        @Html.TextBoxFor(m => m.Width, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите ширину",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Width, "", new { @class = "text-danger" })
                    <div class="input-container">
                        @Html.LabelFor(m => m.Length, new
                        {
                        @class = "col-md-2 w-auto control-label"
                        })
                        @Html.TextBoxFor(m => m.Length, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите длину",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Length, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.CostOfDelivery, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextBoxFor(m => m.CostOfDelivery, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите приблизительный вес с упаковкой за единицу (кг)",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.CostOfDelivery, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.SellerMargin, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextBoxFor(m => m.SellerMargin, null, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите наценку от продавца (в процентах)",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.SellerMargin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.OurService, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.CheckBoxFor(m => m.OurService, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Выберите"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.OurService, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.TotalCost, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextBoxFor(m => m.TotalCost, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите конечную стоимость",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.TotalCost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-1 w-100">
                <div class="col-md-10 w-100">
                    @Html.LabelFor(m => m.BankCommission, new
                    {
                        @class = "col-md-2 w-100 control-label"
                    })
                    <div class="input-container">
                        @Html.TextBoxFor(m => m.BankCommission, new
                        {
                            @class = "form-control w-100",
                            placeholder = "Введите комиссию банка",
                            type = "text"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.BankCommission, "", new { @class = "text-danger" })
                </div>
            </div>

            <button id="submit" class="btn layout-button w-100">Разместить</button>
        </div>
    </div>
}

@section Scripts {

    <script>
        function upload(fileUploadInput) {
            const image = fileUploadInput.files[0];
            if (!image.type.includes('image')) {
                return alert('Only images are allowed!');
            }

            if (image.size > 10_000_000) {
                return alert('Maximum upload size is 10MB!');
            }

            const fileReader = new FileReader();
            fileReader.readAsDataURL(image);

            fileReader.onload = (fileReaderEvent) => {
                const picture = fileUploadInput.parentElement.querySelector('.image-upload');
                picture.src = `${fileReaderEvent.target.result}`;
            }
        }

        $(document).ready(function () {
        $("#addImageButton").click(function () {
            $.ajax({
                url: '@Url.Action("GetUploadForm", "Media")',
                type: 'GET',
                cache: false,
                async: true,
                dataType: "html"
            })
                .done(function(result) {
                    $('.images').append(result);
                }).fail(function(xhr) {
                console.log('error : ' + xhr.status + ' - ' + xhr.statusText + ' - ' + xhr.responseText);
            });
        });

        $("#removeImageButton").click(function () {
            if ($('.images').children().length == 1) {
                alert("No more images to remove");
                return false;
            }

            $(".images").children().eq($('.images').children().length - 1).remove();
        });
    });
    </script>

}
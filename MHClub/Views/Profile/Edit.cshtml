@using MHClub.Utils
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model MHClub.Models.User.UserEditDto

@{
    Layout = "_Layout";
    ViewData["Title"] = "Редактирование профиля";
}

<div class="d-flex container justify-content-center">
    @using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", @class = "d-flex flex-column form-profile" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group mb-1 w-100 d-flex justify-content-center">
            <label class="custom-file-upload">
                @Html.TextBoxFor(m => m.Avatar, "", new
                {
                    type = "file",
                    onchange = "upload(this)",
                    style = "display:none",
                    accept = "image/*"
                })
                <div id="img_container">
                    <div class="ratio ratio-1x1 rounded-circle overflow-hidden shadow" style="width: 150px; height: 150px;">
                        <img id="profile-image" src="~/contentImages/no_avatar.jpg" class="card-img-top" alt="avatar">
                    </div>
                </div>
            </label>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mb-1 w-100">
            @Html.LabelFor(m => m.Name, new
            {
                @class = "col-md-2 w-100 control-label"
            })
            <div class="col-md-10 w-100">
                <div class="input-container">
                    @Html.TextBoxFor(m => m.Name, new
                    {
                        @class = "form-control w-100",
                        placeholder = "Введите имя",
                        type = "text"
                    })
                </div>
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-1 w-100">
            @Html.LabelFor(m => m.Email, new
            {
                @class = "col-md-2 w-100 control-label"
            })
            <div class="col-md-10 w-100">
                <div class="input-container">
                    @Html.TextBoxFor(m => m.Email, new
                    {
                        @class = "form-control w-100",
                        placeholder = "Введите почту",
                        type = "email"
                    })
                    <span>
                        <svg stroke="currentColor" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path>
                        </svg>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-1 w-100">
            @Html.LabelFor(m => m.Phone, new
            {
                @class = "col-md-2 w-100 control-label"
            })
            <div class="col-md-10 w-100">
                <div class="input-container">
                    @Html.TextBoxFor(m => m.Phone, new
                    {
                        @class = "form-control w-100",
                        placeholder = "Введите телефон",
                        type = "text"
                    })
                </div>
                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-1 w-100">
            @Html.LabelFor(m => m.OldPassword, new
            {
                @class = "col-md-2 w-100 control-label"
            })
            <div class="col-md-10 w-100">
                <div class="input-container">
                    @Html.TextBoxFor(m => m.OldPassword, new
                    {
                        @class = "form-control w-100",
                        placeholder = "Введите пароль",
                        type = "password"
                    })
                    <span onclick="togglePasswordVisibility(this)">
                        <svg id="eye-icon" stroke="currentColor" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path>
                            <path d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path>

                            <line class="strike-line" x1="0" y1="0" x2="24" y2="24" stroke="currentColor" stroke-width="2" visibility="visible"/>
                        </svg>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-1 w-100">
            @Html.LabelFor(m => m.Password, new
            {
                @class = "col-md-2 w-100 control-label"
            })
            <div class="col-md-10 w-100">
                <div class="input-container">
                    @Html.TextBoxFor(m => m.Password, new
                    {
                        @class = "form-control w-100",
                        placeholder = "Введите пароль",
                        type = "password"
                    })
                    <span onclick="togglePasswordVisibility(this)">
                        <svg id="eye-icon" stroke="currentColor" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path>
                            <path d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path>

                            <line class="strike-line" x1="0" y1="0" x2="24" y2="24" stroke="currentColor" stroke-width="2" visibility="visible"/>
                        </svg>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-1 w-100">
            @Html.LabelFor(m => m.RepeatPassword, new
            {
                @class = "col-md-2 w-100 control-label"
            })
            <div class="col-md-10 w-100">
                <div class="input-container">
                    @Html.TextBoxFor(m => m.RepeatPassword, new
                    {
                        @class = "form-control w-100",
                        placeholder = "Повторите пароль",
                        type = "password"
                    })
                    <span onclick="togglePasswordVisibility(this)">
                        <svg id="eye-icon" stroke="currentColor" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path>
                            <path d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path>

                            <line class="strike-line" x1="0" y1="0" x2="24" y2="24" stroke="currentColor" stroke-width="2" visibility="visible"/>
                        </svg>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.RepeatPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="d-flex flex-column gap-2">
            <button class="btn text-white w-100" style="background-color: #EB275F;">Сохранить изменения</button>
            <button type="button" onclick="location.href=`@ViewBag.ReturnUrl`" class="btn text-white w-100" style="background-color: #72C4E7;">Выйти без изменений</button>
        </div>
    }
</div>

@section Scripts {
    <script>
        function upload(fileUploadInput) {
            const image = fileUploadInput.files[0];
            if (!image.type.includes('image')) {
                return alert('Only images are allowed!');
            }

            if (image.size > 10_000_000) {
                return alert('Maximum upload size is 10MB!');
            }

            const fileReader = new FileReader();
            fileReader.readAsDataURL(image);

            fileReader.onload = (fileReaderEvent) => {
                document.querySelector('#profile-image').src = fileReaderEvent.target.result;
            };
        }
    </script>
}